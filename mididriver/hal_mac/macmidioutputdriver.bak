//## begin module%3D6AB5580013.cm preserve=no
//	  %X% %Q% %Z% %W%
//## end module%3D6AB5580013.cm

//## begin module%3D6AB5580013.cp preserve=no
//## end module%3D6AB5580013.cp

//## Module: MacMidiOutputDriver%3D6AB5580013; Package body
//	Mac version of Midi OutputDriver
//## Subsystem: MidiDriver::hal_mac%3D6AB4D80041
//## Source file: C:\develop\WinSmartController\mididriver\hal_mac\macmidioutputdriver.cpp

//## begin module%3D6AB5580013.additionalIncludes preserve=no
//## end module%3D6AB5580013.additionalIncludes

//## begin module%3D6AB5580013.includes preserve=yes
#include <stddef.h>
#include <CoreMIDI/MIDIServices.h>
#include "iodata.h"
//## end module%3D6AB5580013.includes

#include "midioutputdriver.h"
#include "midiinputdriver.h"
#include "filedriver.h"
#include "mididriver.h"
#include "midiutilities.h"
//## begin module%3D6AB5580013.declarations preserve=no
//## end module%3D6AB5580013.declarations

//## begin module%3D6AB5580013.additionalDeclarations preserve=yesvoid SetSimDigitalOutput (unsigned channel, bool value);
//## end module%3D6AB5580013.additionalDeclarations


//## begin MacMidiOutputDriver%3D6AB8F6030E.preface preserve=yes
//## end MacMidiOutputDriver%3D6AB8F6030E.preface

//## Class: MacMidiOutputDriver%3D6AB8F6030E
//## Category: MidiDriver::hal_mac%3D6AB53A007E
//## Subsystem: MidiDriver::hal_mac%3D6AB4D80041
//## Persistence: Transient
//## Cardinality/Multiplicity: n

class MacMidiOutputDriver : public MidiOutputDriver  //## Inherits: <unnamed>%3D6AB904021E
{
  //## begin MacMidiOutputDriver%3D6AB8F6030E.initialDeclarations preserve=yes
  //## end MacMidiOutputDriver%3D6AB8F6030E.initialDeclarations

  public:
    //## Constructors (specified)
      //## Operation: MacMidiOutputDriver%1030404440
      MacMidiOutputDriver (int queue_size);

    //## Destructor (generated)
      ~MacMidiOutputDriver();


    //## Other Operations (specified)
      //## Operation: open%1030414461
      //	opens device
      bool open (int device_num, 	// The device number required by hardware. This value is
      	// the the device number in the hardware
      int device_id = -1	// Index that the device will be identified as the driver.
      	// -1 signifies that the device_num is used
      );

      //## Operation: close%1030414462
      //	closes device
      bool close ();

      //## Operation: TransmitMidiByte%1030414463
      //	Transmits Midi Byte to an output
      void TransmitMidiByte (unsigned char data, 	// The Midi byte to transmit
      int output_num = 0	// The Midi Output to go to
      );

      //## Operation: TransmitCV%1030414464
      //	Transmits a variable cv to output
      void TransmitCV (unsigned char data_val, int output_num);

      //## Operation: TransmitDigital%1030414465
      //	transmits digital CV outputs
      void TransmitDigital (unsigned char data_val, int output_num);

    // Additional Public Declarations
      //## begin MacMidiOutputDriver%3D6AB8F6030E.public preserve=yes
      //## end MacMidiOutputDriver%3D6AB8F6030E.public

  protected:
    // Additional Protected Declarations
      //## begin MacMidiOutputDriver%3D6AB8F6030E.protected preserve=yes
      //## end MacMidiOutputDriver%3D6AB8F6030E.protected

  private:

    //## Other Operations (specified)
      //## Operation: TransmitSysex%1030414466
      bool TransmitSysex ();

    // Additional Private Declarations
      //## begin MacMidiOutputDriver%3D6AB8F6030E.private preserve=yes
  MIDIPortRef _OutPort;
  MIDIClientRef _client;
  MIDIEndpointRef _Dest;
      //## end MacMidiOutputDriver%3D6AB8F6030E.private
  private: //## implementation
    // Additional Implementation Declarations
      //## begin MacMidiOutputDriver%3D6AB8F6030E.implementation preserve=yes
      //## end MacMidiOutputDriver%3D6AB8F6030E.implementation

};

//## begin MacMidiOutputDriver%3D6AB8F6030E.postscript preserve=yes
//## end MacMidiOutputDriver%3D6AB8F6030E.postscript

// Class MacMidiOutputDriver 

// Class MidiOutputDriver 


//## begin MidiOutputDriver::_max_devices%3CB2310200A6.attr preserve=no  protected: static int {VA} 6
int MidiOutputDriver::_max_devices = 6;
//## end MidiOutputDriver::_max_devices%3CB2310200A6.attr


//## begin MidiOutputDriver::_devices%3CB22B7F01B6.role preserve=no  protected: static MidiOutputDriver { -> 0..nUHAN}
MidiOutputDriver*  MidiOutputDriver::_devices[] = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};
//## end MidiOutputDriver::_devices%3CB22B7F01B6.role


MidiOutputDriver::MidiOutputDriver (int queue_size)
  //## begin MidiOutputDriver::MidiOutputDriver%1012859302.hasinit preserve=no
      : _tx_ready(false)
  //## end MidiOutputDriver::MidiOutputDriver%1012859302.hasinit
  //## begin MidiOutputDriver::MidiOutputDriver%1012859302.initialization preserve=yes
  , MidiDriver(queue_size)
  //## end MidiOutputDriver::MidiOutputDriver%1012859302.initialization
{
  //## begin MidiOutputDriver::MidiOutputDriver%1012859302.body preserve=yes
  //## end MidiOutputDriver::MidiOutputDriver%1012859302.body
}


MidiOutputDriver::~MidiOutputDriver()
{
  //## begin MidiOutputDriver::~MidiOutputDriver%.body preserve=yes
  //## end MidiOutputDriver::~MidiOutputDriver%.body
}



//## Other Operations (implementation)
bool MidiOutputDriver::TxDataReady (IOData* io_data)
{
  //## begin MidiOutputDriver::TxDataReady%1012859306.body preserve=yes
  return false;
  //## end MidiOutputDriver::TxDataReady%1012859306.body
}

MidiOutputDriver* MidiOutputDriver::create (int queue_size)
{
  //## begin MidiOutputDriver::create%1012864640.body preserve=yes
  return new MacMidiOutputDriver (queue_size);
  //## end MidiOutputDriver::create%1012864640.body
}

void MidiOutputDriver::TransmitMidiData (const MidiData& midi_data, int output_num)
{
  //## begin MidiOutputDriver::TransmitMidiData%1013488868.body preserve=yes
  //## end MidiOutputDriver::TransmitMidiData%1013488868.body

  int tx_bytes =  MidiUtilities::num_bytes((char) midi_data.status);
    
  TransmitMidiByte (midi_data.status,output_num);
    
  if (tx_bytes > 1)
    {
      TransmitMidiByte (midi_data.data1, output_num);
    }
    
  if (tx_bytes > 2)
    {
      TransmitMidiByte (midi_data.data2, output_num);
     }
}

void MidiOutputDriver::TransmitMidiMessageByte (unsigned char data, int output_num, unsigned device)
{
  //## begin MidiOutputDriver::TransmitMidiMessageByte%1018308378.body preserve=yes
  MidiOutputDriver* p_device = _devices[device];

  if (p_device)
  {
  	p_device->TransmitMidiByte(data, output_num);
  }


  //## end MidiOutputDriver::TransmitMidiMessageByte%1018308378.body
}

void MidiOutputDriver::TransmitControlVoltage (unsigned char data_val, int output_num, unsigned device)
{
  //## begin MidiOutputDriver::TransmitControlVoltage%1018308379.body preserve=yes  SetSimAnalogueOutput (output_num, data_val);
  //## end MidiOutputDriver::TransmitControlVoltage%1018308379.body
}

void MidiOutputDriver::TransmitDigitalVoltage (unsigned char data_val, int output_num, unsigned device)
{
  //## begin MidiOutputDriver::TransmitDigitalVoltage%1018308380.body preserve=yes  SetSimDigitalOutput (output_num, data_val);
  //## end MidiOutputDriver::TransmitDigitalVoltage%1018308380.body
}

void MidiOutputDriver::TransmitMidiDataMessage (const MidiData& midi_data, int output_num, unsigned device)
{
  //## begin MidiOutputDriver::TransmitMidiDataMessage%1018308381.body preserve=yes
  device = output_num;

  MidiOutputDriver* p_device = _devices[device];

  if (p_device)
  {
  	p_device->TransmitMidiData(midi_data, output_num);
  }

  //## end MidiOutputDriver::TransmitMidiDataMessage%1018308381.body
}

void MidiOutputDriver::TransmitIoData (IOData io_data, int output_num, unsigned device)
{
  //## begin MidiOutputDriver::TransmitIoData%1031946742.body preserve=yes
  //## end MidiOutputDriver::TransmitIoData%1031946742.body
}

unsigned MidiOutputDriver::NumDevices ()
{
  //## begin MidiOutputDriver::NumDevices%1018316747.body preserve=yes
	return MIDIGetNumberOfDestinations();
  //## end MidiOutputDriver::NumDevices%1018316747.body
}

bool MidiOutputDriver::GetDeviceName (unsigned index, char* ret_buf, unsigned buf_len)
{
  //## begin MidiOutputDriver::GetDeviceName%1049869260.body preserve=yes
	bool ret = false;
	MIDIEndpointRef dev = MIDIGetDestination(index);

	if (dev != NULL) {
		char name[64];
		CFStringRef pname;
		MIDIObjectGetStringProperty(dev, kMIDIPropertyName, &pname);
		CFStringGetCString(pname, name, sizeof(name), 0);
		CFRelease(pname);
		strncpy(ret_buf, name, buf_len);
		ret_buf[buf_len - 1] = 0;
		ret = true;
	}
	return ret;
  //## end MidiOutputDriver::GetDeviceName%1049869260.body
}

// Additional Declarations
  //## begin MidiOutputDriver%3C5E05CA01BF.declarations preserve=yes
  //## end MidiOutputDriver%3C5E05CA01BF.declarations

// Class MacMidiOutputDriver 

MacMidiOutputDriver::MacMidiOutputDriver (int queue_size)
  //## begin MacMidiOutputDriver::MacMidiOutputDriver%1030404440.hasinit preserve=no
  //## end MacMidiOutputDriver::MacMidiOutputDriver%1030404440.hasinit
  //## begin MacMidiOutputDriver::MacMidiOutputDriver%1030404440.initialization preserve=yes
  :MidiOutputDriver (queue_size), _OutPort(NULL), _client(NULL), _Dest(NULL)
  //## end MacMidiOutputDriver::MacMidiOutputDriver%1030404440.initialization
{
  //## begin MacMidiOutputDriver::MacMidiOutputDriver%1030404440.body preserve=yes
  //## end MacMidiOutputDriver::MacMidiOutputDriver%1030404440.body
}


MacMidiOutputDriver::~MacMidiOutputDriver()
{
  //## begin MacMidiOutputDriver::~MacMidiOutputDriver%.body preserve=yes
  //## end MacMidiOutputDriver::~MacMidiOutputDriver%.body
}



//## Other Operations (implementation)
bool MacMidiOutputDriver::open (int device_num, int device_id)
{
  //## begin MacMidiOutputDriver::open%1030414461.body preserve=yes
  bool ret = false;

  MIDIClientCreate(CFSTR("MIDI Out"), NULL, NULL, &_client);
  MIDIOutputPortCreate(_client, CFSTR("Output port"), &_OutPort);
  if (device_num <= MIDIGetNumberOfDestinations())
    {
      _Dest = MIDIGetDestination(device_num);
      ret = true;
    }

  if (ret)
    {
      if (device_id == -1 || device_id >= _max_devices)
      	{
	  _devices[device_num] = this;
        }
      else
      	{
	  _devices[device_id] = this;
        }
    }

  return ret;
  //## end MacMidiOutputDriver::open%1030414461.body
}

bool MacMidiOutputDriver::close ()
{
  //## begin MacMidiOutputDriver::close%1030414462.body preserve=yes
  //## end MacMidiOutputDriver::close%1030414462.body
}

void MacMidiOutputDriver::TransmitMidiByte (unsigned char data, int output_num)
{
  //## begin MacMidiOutputDriver::TransmitMidiByte%1030414463.body preserve=yes
  MIDIPacket* packet;
  MIDIPacketList packet_list;
  packet = MIDIPacketListInit(&packet_list);
  packet = MIDIPacketListAdd(&packet_list, sizeof(MIDIPacketList),packet,  0, 1, &data);

  MIDISend(_OutPort, _Dest, &packet_list);
  //## end MacMidiOutputDriver::TransmitMidiByte%1030414463.body
}

void MacMidiOutputDriver::TransmitCV (unsigned char data_val, int output_num)
{
  //## begin MacMidiOutputDriver::TransmitCV%1030414464.body preserve=yes
  //## end MacMidiOutputDriver::TransmitCV%1030414464.body
}

void MacMidiOutputDriver::TransmitDigital (unsigned char data_val, int output_num)
{
  //## begin MacMidiOutputDriver::TransmitDigital%1030414465.body preserve=yes
  //## end MacMidiOutputDriver::TransmitDigital%1030414465.body
}

bool MacMidiOutputDriver::TransmitSysex ()
{
  //## begin MacMidiOutputDriver::TransmitSysex%1030414466.body preserve=yes
  //## end MacMidiOutputDriver::TransmitSysex%1030414466.body
}

// Additional Declarations
  //## begin MacMidiOutputDriver%3D6AB8F6030E.declarations preserve=yes
  //## end MacMidiOutputDriver%3D6AB8F6030E.declarations

//## begin module%3D6AB5580013.epilog preserve=yes
//## end module%3D6AB5580013.epilog
