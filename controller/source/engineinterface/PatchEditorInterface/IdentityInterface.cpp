/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class IdentityInterface */
#include "stdafx.h"
#include "control.h"
#include "identityquestion.h"
#include "presentationquestion.h"
/*
 * Class:     Jni_Identity
 * Method:    GetDefaultAttribute
 * Signature: (II)Ljava/lang/String;
 */
extern "C" JNIEXPORT jstring JNICALL Java_Jni_Identity_GetDefaultAttribute
  (JNIEnv * env, jclass, jint pQuestion, jint objKey)
{
  char buf [256];

  IdentityQuestion::GetDefaultAttribute (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      buf, 	// This has the attribute value returned as a null
      	// terminated string
      sizeof(buf)	// The length of the ret_value buffer
      );

  jstring ret = env->NewStringUTF(buf);
  return ret;
}

/*
 * Class:     Jni_Identity
 * Method:    GetName
 * Signature: (II)Ljava/lang/String;
 */
extern "C" JNIEXPORT jstring JNICALL Java_Jni_Identity_GetName
  (JNIEnv * env, jclass, jint pQuestion, jint objKey)
{
  char buf [256];

  IdentityQuestion::GetName (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      buf, 	// This has the attribute value returned as a null
      	// terminated string
      sizeof(buf)	// The length of the ret_value buffer
      );

  jstring ret = env->NewStringUTF(buf);
  return ret;
}


/*
 * Class:     Jni_Identity
 * Method:    GetComment
 * Signature: (II)Ljava/lang/String;
 */
extern "C" JNIEXPORT jstring JNICALL Java_Jni_Identity_GetComment
  (JNIEnv * env, jclass, jint pQuestion, jint objKey)
{
  char buf [256];

  IdentityQuestion::GetComment (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      buf, 	// This has the attribute value returned as a null
      	// terminated string
      sizeof(buf)	// The length of the ret_value buffer
      );

  jstring ret = env->NewStringUTF(buf);
  return ret;
}


/*
 * Class:     Jni_Identity
 * Method:    GetType
 * Signature: (II)Ljava/lang/String;
 */
extern "C" JNIEXPORT jstring JNICALL Java_Jni_Identity_GetType
  (JNIEnv * env, jclass, jint pQuestion, jint objKey)
{
  char buf [256];

  IdentityQuestion::GetType (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      buf, 	// This has the attribute value returned as a null
      	// terminated string
      sizeof(buf)	// The length of the ret_value buffer
      );

  jstring ret = env->NewStringUTF(buf);
  return ret;
}


/*
 * Class:     Jni_Identity
 * Method:    SetName
 * Signature: (IILjava/lang/String;)Z
 */
extern "C" JNIEXPORT jboolean JNICALL Java_Jni_Identity_SetName
  (JNIEnv *env, jclass, jint pQuestion, jint objKey, jstring at_value)
{
  const char* new_value = env->GetStringUTFChars(at_value, NULL);
  
  return IdentityQuestion::SetName (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      new_value	// This has the attribute value returned as a null
      	// terminated string
      );
}

/*
 * Class:     Jni_Identity
 * Method:    SetComment
 * Signature: (IILjava/lang/String;)Z
 */
extern "C" JNIEXPORT jboolean JNICALL Java_Jni_Identity_SetComment
  (JNIEnv *env, jclass, jint pQuestion, jint objKey, jstring at_value)
{
  const char* new_value = env->GetStringUTFChars(at_value, NULL);
  
  return IdentityQuestion::SetComment (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      new_value	// This has the attribute value returned as a null
      	// terminated string
      );
}


/*
 * Class:     Jni_Identity
 * Method:    GetModified
 * Signature: (II)Z
 */
extern "C" JNIEXPORT jboolean JNICALL Java_Jni_Identity_GetModified
  (JNIEnv *, jclass, jint pQuestion, jint objKey)
{
  return  IdentityQuestion::GetModified (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey);
}

/*
 * Class:     Jni_Identity
 * Method:    SetDefaultAttribute
 * Signature: (IILjava/lang/String;)Z
 */
extern "C" JNIEXPORT jboolean JNICALL Java_Jni_Identity_SetDefaultAttribute
  (JNIEnv *env, jclass, jint pQuestion, jint objKey, jstring at_value)
{
  const char* new_value = env->GetStringUTFChars(at_value, NULL);
  
  return IdentityQuestion::SetDefaultAttribute (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, 	// The key associated with the Identity
      new_value	// This has the attribute value returned as a null
      	// terminated string
      );
}


/*
 * Class:     Jni_Identity
 * Method:    CanSave
 * Signature: (II)Z
 */
extern "C" JNIEXPORT jboolean JNICALL Java_Jni_Identity_CanSave
  (JNIEnv *, jclass, jint pQuestion, jint objKey)
{
  return  IdentityQuestion::CanSave (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey);
}

/*
 * Class:     Jni_Identity
 * Method:    GetParent
 * Signature: (II)I
 */
extern "C" JNIEXPORT jint JNICALL Java_Jni_Identity_GetParent
  (JNIEnv *, jclass, jint pQuestion, jint objKey)
{
  P_PATCH pParent = IdentityQuestion::GetParent (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey);
  return pParent.Key();
}

/*
 * Class:     Jni_Identity
 * Method:    SetParent
 * Signature: (III)V
 */
extern "C" JNIEXPORT void JNICALL Java_Jni_Identity_SetParent
  (JNIEnv *, jclass, jint pQuestion, jint objKey, jint pPatch)
{
  IdentityQuestion::SetParent (getPresentation (pQuestion), 	// Pointer to the Presentation Question used to get the
      	// answer
      (P_IDENTITY) objKey, (P_PATCH) pPatch);
}


