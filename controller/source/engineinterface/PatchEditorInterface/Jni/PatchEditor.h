/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class PatchEditor */

#ifndef _Included_PatchEditor
#define _Included_PatchEditor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     PatchEditor
 * Method:    GetCurrentInterface
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_GetCurrentInterface
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    Initialise
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_Initialise
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    Deinitialise
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_Deinitialise
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    OpenMidiInputPort
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_OpenMidiInputPort
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     PatchEditor
 * Method:    OpenMidiOutputPort
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_OpenMidiOutputPort
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     PatchEditor
 * Method:    CloseMidiOutputPorts
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_CloseMidiOutputPorts
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    CloseMidiInputPorts
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_CloseMidiInputPorts
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    SetDefaultDirectory
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_SetDefaultDirectory
  (JNIEnv *, jclass, jstring);

/*
 * Class:     PatchEditor
 * Method:    GetDefaultDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_PatchEditor_GetDefaultDirectory
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    OpenSysexFile
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_OpenSysexFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     PatchEditor
 * Method:    CloseSysexFile
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_CloseSysexFile
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    PrepareTxSysexFile
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_PrepareTxSysexFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     PatchEditor
 * Method:    TxSysexData
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_PatchEditor_TxSysexData
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     PatchEditor
 * Method:    CloseTxSysexFile
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_PatchEditor_CloseTxSysexFile
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    NumMidiOut
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_NumMidiOut
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    NumMidiIn
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_NumMidiIn
  (JNIEnv *, jclass);

/*
 * Class:     PatchEditor
 * Method:    MidOutName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_PatchEditor_MidOutName
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    MidInName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_PatchEditor_MidInName
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    OpenInterface
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_OpenInterface
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     PatchEditor
 * Method:    SetInterfaceAddress
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_SetInterfaceAddress
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     PatchEditor
 * Method:    SetCurrentInterface
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_PatchEditor_SetCurrentInterface
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    AddAnalogueValue
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_PatchEditor_AddAnalogueValue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     PatchEditor
 * Method:    AddDigitalValue
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_PatchEditor_AddDigitalValue
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     PatchEditor
 * Method:    GetDigitalValue
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_PatchEditor_GetDigitalValue
  (JNIEnv *, jclass, jint);

/*
 * Class:     PatchEditor
 * Method:    GetAnalogueValue
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_PatchEditor_GetAnalogueValue
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
